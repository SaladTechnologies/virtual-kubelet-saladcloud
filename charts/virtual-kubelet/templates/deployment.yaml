apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ template "vk.fullname" . }}
{{ include "vk.labels" . | indent 2 }}
    component: kubelet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "vk.fullname" . }}
  template:
    metadata:
{{ include "vk.labels" . | indent 6 }}
        component: kubelet
    spec:
      containers:
        - name: {{ template "vk.fullname" . }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["virtual-kubelet"]
          args: [
{{- if not .Values.taint.enabled }}
            "--disable-taint", "true",
{{- end }}
            "--nodename", "{{ required "nodename is required" .Values.nodename }}",
{{- if .Values.logLevel }}
            "--logLevel", "{{.Values.logLevel}}",
{{- end }}
            "--api-key", "{{ .Values.salad.apiKey }}",
            "--organizationName", "{{ .Values.salad.organizationName }}",
            "--projectName", "{{ .Values.salad.projectName }}"
          ]
      serviceAccountName: {{ if .Values.rbac.install }} "{{ template "vk.fullname" . }}-{{ .Values.rbac.serviceAccountName }}" {{ end }}
      nodeSelector:
        kubernetes.io/os: linux
